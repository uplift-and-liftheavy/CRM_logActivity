#####################################################################################################
# import functions
# import pyautogui as py
import mouse
import time
# import xlrd
#import pandas as pd
from selenium import webdriver
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
# from selenium.webdriver.common.action_chains import ActionChains
# from selenium.webdriver.support.ui import WebDriverWait
# from selenium.common.exceptions import TimeoutException
# from selenium.common.exceptions import ElementNotVisibleException
# from selenium.common.exceptions import ElementNotSelectableException
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import NoSuchElementException
from selenium.common.exceptions import ElementNotInteractableException
import openpyxl as xl
# from openpyxl import Workbook as wb
#
#############################################
# Import Excel Report
reportPath = 'C:/Users/myusername/Documents/Python Stuff/My Code/Log Activity/Report.xlsx'
report = xl.load_workbook(reportPath)
sheet1 = report["BLANK"]
#############################################
#
#############################################
# Name Columns in Excel Spreadsheet
columnAccountID = 2
columnContactID = 4
columnDescription = 5
columnStartDateTime = 6
columnEndDateTime = 7
columnNotes = 8
#############################################
#
#############################################
# How many rows of data are there?
print("You must be connected to the VPN for this program to run successfully." + "\r\n" + "If you aren't logged into the VPN, please do that before proceeding.")
print("\r\n"+"How many entries (rows) do you want to make? ")
mouse.move(1081, 832, absolute = True, duration=0, steps_per_second=0.1)
mouse.click()
rowMaxCount = input()
print(rowMaxCount)
rowMaxCount = int(rowMaxCount)+2
#
#print("You are making ", rowMaxCount, " entries.")
#print("Is that correct? y/n")
#userInputEntries = input()
#if userInputEntries == "n"
#
#############################################
#
#chromeOptions = webdriver.ChromeOptions()
#chromeOptions.set_capability("browserVersion", "96")
#driver = webdriver.Chrome(executable_path = r'C:\Users\myusername\Documents\Python\chromedriver_win32\chromedriver.exe')
driver_path = r'C:/Users/myusername/Documents/Python Stuff/Secondary Packages/chromedriver.exe'
driver = webdriver.Chrome(executable_path=driver_path)
# driver = webdriver.Chrome()
#
#############################################
# Start at Row 2
rowCurrent=2
#############################################
#
#############################################
# Note that TV in hotel had a resolution of 1920x1080
# driver.implicitly_wait(10)
driver.implicitly_wait(10)
#############################################
#
##########################################################################################
# Set a period of time (60s) to wait for page to load.
PATIENCE_TIME = 80
def waitForLoad(element_homePageLoaded):
#   Wait = driver.(Chrome(), PATIENCE_TIME)
   Wait = WebDriverWait(driver, PATIENCE_TIME)
   Wait.until(EC.element_to_be_clickable(driver.find_element(by=By.XPATH, value=element_homePageLoaded)))
#              presence_of_element_located(by=By.XPATH, value='element_homePageLoaded'))
##########################################################################################
# 
##########################################################################################
def frame_switch(name):
  driver.switch_to.frame(driver.find_element(by=By.XPATH, value=name))
##########################################################################################
#
##########################################################################################
# Make sure zoom is set to 100% on webpage. 
driver.get('chrome://settings/')
driver.execute_script('chrome.settingsPrivate.setDefaultZoom(1);')
##########################################################################################
#
##########################################################################################
# Open CRM
driver.get("website deleted")
#time.sleep(1)
##########################################################################################
#
##########################################################################################
# Tell Chrome to open in the left hand monitor, maximize, set zoom to 100, and scroll to the top and left
driver.set_window_position(-1000, 0)
driver.maximize_window()
time.sleep(1)
##########################################################################################
#
#############################################
#waitForLoad('/html/body/div[3]/div/p[3]')
waitForLoad('/html/body')
time.sleep(1)        
#############################################
#
#############################################
# Loop to grab all activity for logging in CRM
while rowCurrent < rowMaxCount: 
    #
    time.sleep(5)
    driver.switch_to.default_content()
    waitForLoad('/html/body')
    time.sleep(1)
    #############################################
    # Navigate to webframe[1]. Must go to webframe[0] first.
    driver.switch_to.frame(0)
    driver.switch_to.frame(1)
    time.sleep(2)
    waitForLoad('//*[@id="C4_W16_V17_mainmenu"]/li[4]')
    #############################################
    #
    ##########################################################################################
    # With the right arrow buttons accessible, click on the right arrow next to Account Management, and then Contacts
    # Set the right arrow in frame[1] equal to 'element'. 
    element_AccountManagement_rightArrow = driver.find_element(by=By.CLASS_NAME, value='th-menu2-arrow')
    # Check to see that is visible
    # print(element_AccountManagement_rightArrow.is_displayed())
    #
    # Click the right arrow twice
    element_AccountManagement_rightArrow.click()
    element_AccountManagement_rightArrow.click()
    time.sleep(1)
    ##########################################################################################
    #
    ##########################################################################################
    # Click on Contacts using an offset from the right Arrow (numbers by trial and error, which is why scrolling to top left of page is important)
    action = webdriver.common.action_chains.ActionChains(driver)
    element_AccountManagement_rightArrow_Location = action.move_to_element_with_offset(element_AccountManagement_rightArrow, 60, 25)
    action.click()
    action.perform()
    time.sleep(5)
    waitForLoad('//*[@id="C24_W97_V98_search_parameters[1].VALUE1"]')
    #time.sleep(1)
    ##########################################################################################
    #
    ##########################################################################################
    # Go to Contact ID Search Field
    element_inputContactID_searchField = driver.find_element(by=By.XPATH, value='//*[@id="C24_W97_V98_search_parameters[1].VALUE1"]')
    element_inputContactID_searchField.clear()
    cellValue_ContactID = sheet1.cell(row=rowCurrent, column=columnContactID)
    element_inputContactID_searchField.send_keys(cellValue_ContactID.internal_value)
    time.sleep(1)
    ##########################################################################################
    #
    ######################################################################################
    # Click Search
    cellValue = sheet1.cell(row=rowCurrent, column=columnContactID)
    element_SearchContactID = driver.find_element(by=By.XPATH, value = '//*[@id="C24_W97_V98_SEARCH_BTN"]')
    element_SearchContactID.click()
    time.sleep(1)
    ##########################################################################################
    #
    # Click on Planned Activities > New
    if rowCurrent != 2:
        plannedActivitiesDropDown = driver.find_element(by=By.XPATH, value='//*[@id="C28_W108_V109_0005_expand_link"]/span')
        plannedActivitiesDropDown.click()
        time.sleep(5)
    
    driver.find_element(By.TAG_NAME, "body").send_keys(Keys.ARROW_UP)
    driver.find_element(By.TAG_NAME, "body").send_keys(Keys.ARROW_UP)
    driver.find_element(By.TAG_NAME, "body").send_keys(Keys.ARROW_UP)
    driver.find_element(By.TAG_NAME, "body").send_keys(Keys.ARROW_LEFT)
    driver.find_element(By.TAG_NAME, "body").send_keys(Keys.ARROW_LEFT)
    driver.find_element(By.TAG_NAME, "body").send_keys(Keys.ARROW_LEFT)
    
    waitForLoad('//*[@id="C28_W108_V109_0005_expand_link"]')
#    waitForLoad('//*[@id="C28_W108_V109_0005_expander"]')
    try:
        #element_plannedActivities.click()
        element_plannedActivitiesNew = driver.find_element(by=By.XPATH, value ='//*[@id="C28_W108_V109_0005_toolbar"]/ul/li')
        mainWindow = driver.current_window_handle
        element_plannedActivitiesNew.click()
        time.sleep(5)
        #
        #############################################
    except NoSuchElementException:
        element_plannedActivities = driver.find_element(by=By.XPATH, value = '//*[@id="C28_W108_V109_0005_expand_link"]')
        element_plannedActivities.click()
        time.sleep(1)
        #element_plannedActivities.click()
        element_plannedActivitiesNew = driver.find_element(by=By.XPATH, value ='//*[@id="C28_W108_V109_0005_toolbar"]/ul/li')
        mainWindow = driver.current_window_handle
        element_plannedActivitiesNew.click()
        time.sleep(5)
        #
        #############################################
    except ElementNotInteractableException:
        element_plannedActivities = driver.find_element(by=By.XPATH, value = '//*[@id="C28_W108_V109_0005_expand_link"]')
        element_plannedActivities.click()
        time.sleep(1)
        #element_plannedActivities.click()
        element_plannedActivitiesNew = driver.find_element(by=By.XPATH, value ='//*[@id="C28_W108_V109_0005_toolbar"]/ul/li')
        mainWindow = driver.current_window_handle
        element_plannedActivitiesNew.click()
        time.sleep(5)
        #
        #############################################
        
    # changing the handles to access login page
    for handle in driver.window_handles:
        if handle != mainWindow:
            selectTransactionType = handle
    #############################################
    #
    ##########################################################################################
    time.sleep(3)
    popupWindow = driver.switch_to.window(selectTransactionType)
    #print("Second Window Handle is: ", driver.current_window_handle)
    # Second Window Handle is:  CDwindow-DAE91B2DE5F3D058150346B6943FD9D5
    time.sleep(3)
    #waitForLoad('//*[@id="C32_W141_V142_Table__1__1"]/td[2]')
    ##########################################################################################
    #contentFrameset
    element_newWindow = driver.find_element(by=By.XPATH, value='//*[@id="contentFrameset"]')
    element_AccountManagement_Appointment_Location = action.move_to_element_with_offset(element_newWindow, 200, -5)
    action.click()
    action.perform()
    time.sleep(2)
    #
    driver.switch_to.window(driver.window_handles[0])
    print("Current window handle is: ", driver.current_window_handle)
    driver.switch_to.frame(0)
    driver.switch_to.frame(1)
    time.sleep(2)
    #
    waitForLoad('//*[@id="C36_W151_V153_V154_V155_btadminh_struct.description"]')
    description = driver.find_element(by=By.XPATH, value='//*[@id="C36_W151_V153_V154_V155_btadminh_struct.description"]')
    action.click(description)
    action.perform()
    time.sleep(.1)
    cellValue = sheet1.cell(row=rowCurrent, column=columnDescription)
    description.send_keys(cellValue.internal_value)
    #
    startDateTime = driver.find_element(by=By.XPATH, value='//*[@id="C36_W151_V153_V154_V155_btdate_date"]')
    startDateTime.clear()
    action.click(startDateTime)
    action.perform()
    time.sleep(.1)
    cellValue_startDateTime=sheet1.cell(row=rowCurrent, column=columnStartDateTime)
    startDateTime.send_keys(cellValue_startDateTime.internal_value)
    #
    endDateTime=driver.find_element(by=By.XPATH, value='//*[@id="C36_W151_V153_V154_V155_btdate_enddate"]')
    endDateTime.clear()
    action.click(endDateTime)
    action.perform()
    time.sleep(1)
    cellValue_endDateTime = sheet1.cell(row=rowCurrent, column=columnStartDateTime)
    endDateTime.send_keys(cellValue_startDateTime.internal_value)
    #
    driver.find_element(By.TAG_NAME, "body").send_keys(Keys.ARROW_UP)
    driver.find_element(By.TAG_NAME, "body").send_keys(Keys.ARROW_UP)
    driver.find_element(By.TAG_NAME, "body").send_keys(Keys.ARROW_UP)
    driver.find_element(By.TAG_NAME, "body").send_keys(Keys.ARROW_UP)
    driver.find_element(By.TAG_NAME, "body").send_keys(Keys.ARROW_LEFT)
    driver.find_element(By.TAG_NAME, "body").send_keys(Keys.ARROW_LEFT)
    driver.find_element(By.TAG_NAME, "body").send_keys(Keys.ARROW_LEFT)

    # Set Active Status to Complete 
    activeStatus = driver.find_element(by=By.XPATH, value='//*[@id="C36_W151_V153_V154_V155_btstatus_struct.act_status"]')
    action.click(activeStatus)
    action.perform()
    time.sleep(.1)
    completedStatus = driver.find_element(by=By.XPATH, value='//*[@id="C36_W151_V153_V154_V155_btstatus_struct.act_status__items"]/ul/li[3]/a')
    action.click(completedStatus)
    action.perform()
    time.sleep(.1)
    #
    # Add Notes
    notes = driver.find_element(by=By.XPATH, value='//*[@id="C38_W158_V159_text_lines"]')
    action.click(notes)
    action.perform()
    time.sleep(1)
    cellValue_notes = sheet1.cell(row=rowCurrent, column=columnNotes)
    notes.send_keys(cellValue_notes.internal_value)
    #
    # Click Save
    time.sleep(6)
   # save = driver.find_element(by=By.XPATH, value='//*[@id="C1_W1_V2_C1_W1_V2_V3_$subHeader1"]/ul/li[2]')
    save=driver.find_element(by=By.XPATH,value='//*[@id="C36_W151_V153_thtmlb_button_2"]')
    action.click(save)
    action.perform()
    time.sleep(10)
#    waitForLoad('//*[@id="C36_W151_V153_V154_V155_thtmlb_textView_1"]')
#    waitForLoad('//*[@id="C1_W1_V2_C1_W1_V2_V3_$subHeader1"]/ul/li[1]/span[1]')
    waitForLoad('//*[@id="th-mes-success"]')
    #
    # Click Home
    home = driver.find_element(by=By.XPATH, value='//*[@id="C4_W16_V17_mainmenu"]/li[1]')
    action.click(home)
    action.click(home)
    action.perform()
    #
    ##########################################################################################
    rowCurrent = rowCurrent+1
    time.sleep(5)
    ##########################################################################################
else: 
    print("All activity is logged.")
    logOff=driver.find_element(by=By.XPATH, value='//*[@id=":T_link:U_LOGOFF:I_LOGOFF"]')
    action.click(logOff)
    action.perform()
    time.sleep(3)
    driver.close()
    driver.quit()